#!/usr/bin/env php
<?php

$_ENV['HOME'] = getenv('HOME');
$_ENV['VAGRANT_DOTFILE_PATH'] = soapbox_path() . DIRECTORY_SEPARATOR . '.vagrant';

if (file_exists(__DIR__.'/../vendor/autoload.php'))
{
    require __DIR__.'/../vendor/autoload.php';
}
else
{
    require __DIR__.'/../../autoload.php';
}

function soapbox_path()
{
    if (isset($_SERVER['HOME']))
    {
        return $_SERVER['HOME'].'/.soapbox';
    }
    else
    {
        return $_SERVER['HOMEDRIVE'].$_SERVER['HOMEPATH'].DIRECTORY_SEPARATOR.'.soapbox';
    }
}

function getRootDir() {
    if ($dir = Phar::running(false)) {
        $dir = substr($dir, 0, strrpos($dir, '/'));
        return $dir;
    }

    return __DIR__ . '/../';
}

function chRootDir() {
    chdir(getRootDir());
}

$app = new Symfony\Component\Console\Application('Raven', '@version@');

$app->add(new SoapBox\SoapboxVagrant\DestroyCommand);
$app->add(new SoapBox\SoapboxVagrant\EditCommand);
$app->add(new SoapBox\SoapboxVagrant\HaltCommand);
$app->add(new SoapBox\SoapboxVagrant\InitCommand);
$app->add(new SoapBox\SoapboxVagrant\MakeCommand);
$app->add(new SoapBox\SoapboxVagrant\ProvisionCommand);
$app->add(new SoapBox\SoapboxVagrant\ResumeCommand);
$app->add(new SoapBox\SoapboxVagrant\RunCommand);
$app->add(new SoapBox\SoapboxVagrant\UpCommand);
$app->add(new SoapBox\SoapboxVagrant\UpdateCommand);
$app->add(new SoapBox\SoapboxVagrant\SshCommand);
$app->add(new SoapBox\SoapboxVagrant\StatusCommand);
$app->add(new SoapBox\SoapboxVagrant\SuspendCommand);
$app->add(new SoapBox\SoapboxVagrant\SelfUpdateCommand);
$app->add(new SoapBox\SoapboxVagrant\RefreshCommand);
$app->add(new SoapBox\SoapboxVagrant\Commands\RebuildCommand);

$app->run();
