#!/usr/bin/env bash

# Installs and configures xdebug
if [ "$EUID" -ne 0 ]
	then echo "Please run as root"
	exit
fi

echo "Adding EPEL-6 repo ..."
rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm

echo "Installing EPEL ..."
yum install -y epel-release

echo "Updating yum ..."
yum -y update

echo "Installing vim ..."
yum install -y vim

echo "Installing git ..."
yum install -y git

echo "Installing python ..."
yum install -y python

echo "Installing python-pip ..."
yum install -y python-pip

echo "Installing fabric ..."
yum install -y fabric

echo "Installing php ..."
yum -y install php56w php56w-opcache

echo "Installing composer ..."
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer

echo "Installing node ..."
curl --silent --location https://rpm.nodesource.com/setup | bash -
yum -y install nodejs

npm -g install npm@latest

echo "Installing grunt ..."
npm install -g grunt

echo "Installing grunt-cli ..."
npm install -g grunt-cli

echo "Installing bower ..."
npm install -g bower

echo "Installing raven ... inside of raven"
if [[ `which raven` != "/usr/local/bin/raven" ]]; then
    (
        cd $HOME/.applications
        if [[ ! -d "raven" ]]; then
            git clone -q git@github.com:SoapBox/raven.git raven
        else
            cd raven
            git checkout .
            git pull
            cd ..
        fi

        # Get the latest build of raven
        cd raven
        startingBranch=$(git rev-parse --abbrev-ref HEAD)
        git checkout releases
        git pull
        latestVersion=$(ls releases/ | awk '/^raven-[^-]+$/ {print $0}' | tail -n 1)
        cp releases/$latestVersion raven
        git checkout $startingBranch
        cd ..

        ln -s $HOME/.applications/raven/raven /usr/local/bin/raven
        cd $HOME/.applications/raven
        composer install
        ./install.sh
    )
fi
