#!/bin/bash

if [[ $# == 0 ]]; then
	printf "Usage: build <version>\n"
	exit 1
fi

git checkout --quiet gh-pages
git checkout --quiet BetterUpdating

version=$1

existingTag=$(git tag -l | grep "^$version$")

if [[ $existingTag != "" ]]; then
	printf "That version already exists.\n"
	exit 1
fi

git tag $version
./box build
mv raven.phar raven

git checkout --quiet gh-pages

cp raven releases/raven-$version
git add releases/raven-$version

name='raven.phar'
sha=$(openssl sha1 raven | awk '{ print $2 }')
url="https://soapbox.github.io/raven/releases/raven-$version"

# Add the new release info to the manifest file
php -r "file_put_contents('manifest.json', json_encode(array_merge(json_decode(file_get_contents(\"manifest.json\"), true), [[\"name\" => \"$name\", \"sha1\" => \"$sha\", \"url\" => \"$url\", \"version\" => \"$version\"]]), JSON_PRETTY_PRINT));"
git add manifest.json

git commit -m "Built version $version of raven"

git checkout --quiet BetterUpdating

read -p "Would you like to deploy this release?[y/n] " -n 1 -r input
printf "\n"

if [[ $input =~ ^[Yy]$ ]]
then
	printf "Deploying raven-$version\n"
	git push origin gh-pages
	git push origin $version
	printf "Completed\n"
fi
